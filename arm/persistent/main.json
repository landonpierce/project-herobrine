{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.7.4.23292",
      "templateHash": "10064221060741284503"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "dnsDomainName": {
      "type": "string",
      "metadata": {
        "description": "The DNS label to set on the dynamic IP address. FQDN will be {dnslabel}.{region}.cloudapp.azure.com"
      }
    },
    "vmAdminUserName": {
      "type": "secureString",
      "defaultValue": "minecraftadmin"
    },
    "vmAdminPassword": {
      "type": "secureString"
    },
    "storageRoleAssignmentId": {
      "type": "string",
      "defaultValue": "[newGuid()]"
    }
  },
  "variables": {
    "managedIdentityName": "mc-vm-managed-identity-01",
    "storName": "[format('herobrine{0}', uniqueString(resourceGroup().id))]",
    "roleAssignmentGuid": "[guid(resourceGroup().id, subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c'))]",
    "storName2": "[format('funcstor{0}', uniqueString(resourceGroup().id))]",
    "functionName": "[format('func-{0}', uniqueString(resourceGroup().id))]",
    "EventGridName": "[format('evegridy-{0}', uniqueString(resourceGroup().id))]",
    "eventSubName": "vmdeploysub"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-11-01",
      "name": "mc-vm-vnet-01",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "Subnet-1",
            "properties": {
              "addressPrefix": "10.0.0.0/24"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2017-06-01",
      "name": "[format('IP{0}', uniqueString(resourceGroup().id))]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsDomainName')]",
          "fqdn": "[format('{0}{1}', parameters('dnsDomainName'), parameters('location'))]"
        }
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[format('asp-{0}', uniqueString(resourceGroup().id))]",
      "location": "[parameters('location')]",
      "kind": "app,linux",
      "properties": {
        "reserved": true
      },
      "sku": {
        "tier": "Dynamic",
        "name": "Y1"
      }
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2022-01-31-preview",
      "name": "[variables('managedIdentityName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-02-01",
      "name": "[variables('storName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "encryption": {
          "keySource": "Microsoft.Storage",
          "services": {
            "blob": {
              "enabled": true
            },
            "file": {
              "enabled": true
            },
            "queue": {
              "enabled": true
            },
            "table": {
              "enabled": true
            }
          }
        },
        "allowBlobPublicAccess": false
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('storName'))]",
      "name": "[variables('roleAssignmentGuid')]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))).principalId]",
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-02-01",
      "name": "[variables('storName2')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "encryption": {
          "keySource": "Microsoft.Storage",
          "services": {
            "blob": {
              "enabled": true
            },
            "file": {
              "enabled": true
            },
            "queue": {
              "enabled": true
            },
            "table": {
              "enabled": true
            }
          }
        },
        "allowBlobPublicAccess": false
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-01-15",
      "name": "[variables('functionName')]",
      "kind": "functionapp,linux",
      "location": "[parameters('location')]",
      "properties": {
        "enabled": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('asp-{0}', uniqueString(resourceGroup().id)))]",
        "siteConfig": {
          "numberOfWorkers": 1,
          "linuxFxVersion": "python|3.9",
          "acrUseManagedIdentityCreds": false,
          "alwaysOn": false,
          "http20Enabled": false,
          "functionAppScaleLimit": 200,
          "minimumElasticInstanceCount": 0,
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storName2'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storName2')), '2021-02-01').keys[0].value)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "python"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storName2'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storName2')), '2021-02-01').keys[0].value)]"
            },
            {
              "name": "IpAddressResourceId",
              "value": "[resourceId('Microsoft.Network/publicIPAddresses', format('IP{0}', uniqueString(resourceGroup().id)))]"
            },
            {
              "name": "ManagedIdentityResourceId",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]"
            },
            {
              "name": "WorldStorageAccountName",
              "value": "[variables('storName')]"
            },
            {
              "name": "VMAdminUserName",
              "value": "[parameters('vmAdminUserName')]"
            },
            {
              "name": "VMAdminPassword",
              "value": "[parameters('vmAdminPassword')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', format('asp-{0}', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storName2'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', format('IP{0}', uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('managedIdentityName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/extensions",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}/{1}', variables('functionName'), 'zipdeploy')]",
      "properties": {
        "packageUri": "https://github.com/landonpierce/project-herobrine/releases/download/v0.1/beta.zip"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionName'))]"
      ]
    },
    {
      "type": "Microsoft.EventGrid/topics",
      "apiVersion": "2022-06-15",
      "name": "[variables('EventGridName')]",
      "location": "[parameters('location')]",
      "properties": {
        "inputSchema": "EventGridSchema",
        "publicNetworkAccess": "Enabled",
        "inboundIpRules": [],
        "disableLocalAuth": false,
        "dataResidencyBoundary": "WithinGeopair"
      }
    },
    {
      "type": "Microsoft.EventGrid/topics/eventSubscriptions",
      "apiVersion": "2022-06-15",
      "name": "[format('{0}/{1}', variables('EventGridName'), variables('eventSubName'))]",
      "properties": {
        "destination": {
          "properties": {
            "resourceId": "[format('{0}/functions/VMDeployer', resourceId('Microsoft.Web/sites', variables('functionName')))]",
            "maxEventsPerBatch": 1,
            "preferredBatchSizeInKilobytes": 64
          },
          "endpointType": "AzureFunction"
        },
        "filter": {
          "includedEventTypes": [
            "start-server"
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.EventGrid/topics', variables('EventGridName'))]",
        "[resourceId('Microsoft.Web/sites', variables('functionName'))]",
        "[resourceId('Microsoft.Web/sites/extensions', variables('functionName'), 'zipdeploy')]"
      ]
    }
  ]
}